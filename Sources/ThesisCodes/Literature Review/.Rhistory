axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
# Make plot object
#p <- ggplot(tmp, aes(x="Stage of economic development", y="Environmental degradation")) +
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
+            ylab = "Environmental degradation")
p <- p +stat_function(fun=f) +
geom_line() +
geom_vline(xintercept = as.numeric(0.33), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.66), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
library(tidyr) # for `gather`
library(ggplot2)
library(readr)
f <- function(x) 0 + (1*x) - (1*x*x)
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
#p <- ggplot(tmp, aes(x="Stage of economic development", y="Environmental degradation")) +
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
+            ylab = "Environmental degradation")
p <- p + stat_function(fun=f) +
geom_line() +
geom_vline(xintercept = as.numeric(0.33), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.66), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
f <- function(x) 0 + (1*x) - (1*x*x)
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
#p <- ggplot(tmp, aes(x="Stage of economic development", y="Environmental degradation")) +
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
+            ylab = "Environmental degradation")
# Make plot object
#p <- ggplot(tmp, aes(x="Stage of economic development", y="Environmental degradation")) +
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
+            ylab = "Environmental degradation")
library(tidyr) # for `gather`
library(ggplot2)
library(readr)
f <- function(x) 0 + (1*x) - (1*x*x)
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation")
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.33), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.66), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
f <- function(x) 0 + (1*x) - (1*x*x)
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation")
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation")
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + theme_classic() +
labs(title = "Environmental Kuznets Curve")
p
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation")
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) + theme_classic() +
labs(title = "Environmental Kuznets Curve")
p
library(tidyr) # for `gather`
library(ggplot2)
library(readr)
f <- function(x) 0 + (1*x) - (1*x*x)
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation")
p
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) + theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
p <- p +stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
# theme(axis.text.x=element_blank(),
#       axis.ticks.x=element_blank(),
#       axis.text.y=element_blank(),
#       axis.ticks.y=element_blank(),
#       panel.grid.major = element_blank(),
#       panel.grid.minor = element_blank(),
#       panel.background = element_blank()) +
theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
tmp
tmp <- data.frame(x=0:100, y=f(0:100))
tmp
# Make plot object
# p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
#            ylab = "Environmental degradation")
# p <- p +stat_function(fun=f) +
p <- ggplot(tmp, aes(x="Stage of economic development", y="Environmental degradation")) +
geom_line() +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation") +
#p <- p +
stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
tmp <- data.frame(x=0:1, y=f(0:1))
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation") +
#p <- p +
stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation") +
#p <- p +
stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank,
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
theme_bw() +
labs(title = "Environmental Kuznets Curve")
p
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation") +
#p <- p +
stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
labs(title = "Environmental Kuznets Curve")
p
# Make plot object
p <- qplot(x, y, data = tmp, xlab = "Stage of economic development",
ylab = "Environmental degradation") +
#p <- p +
stat_function(fun=f) +
geom_vline(xintercept = as.numeric(0.30), color = "black", size = 0.5) +
geom_vline(xintercept = as.numeric(0.70), color = "black", size = 0.5) +
theme_bw() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
labs(title = "Environmental Kuznets Curve")
p
library(quantmod)
library(dbnlearn)
library(bnviewer)
library(ggplot2)
library(MLmetrics)
library(readr)
library(tidyr) # for `gather`
library(dplyr) # for `rename` & `select`
library(ggplot2)
library(broom)
library(stargazer)
library(texreg)
#import dataset
df <- read_csv("EKC.csv")
#import dataset
df <- read_csv("EKC.csv")
#import dataset
df <- read_csv("EKC.csv")
#import libraries
library(tidyr) # for `gather`
library(dplyr) # for `rename` & `select`
library(ggplot2)
library(readr)
library(RColorBrewer)
library(ggthemes)
#import dataset
df <- read_csv("EcoAnN.csv")
#Plot all economic components - NOT USED
# df %>% select(Year, GFCE, PFCE, GFCF, CIS,
#               `Exports of goods and services`,
#               `Imports of goods and services`) %>%
#   pivot_longer(., cols = c(GFCE, PFCE, GFCF, CIS,
#                            `Exports of goods and services`,
#                            `Imports of goods and services`),
#                names_to = "Factors", values_to = "Growth (%)") %>%
#   ggplot(aes(x = Year, y = `Growth (%)`, fill = Factors, group = 1)) +
#   geom_point() + geom_line() + theme(legend.position="none") +
#   labs(title = "Growth  of India") +
#   facet_grid(Factors ~ ., scales = "free_y",
#              labeller = as_labeller( # redefine the text that shows up for the facets
#                c(GFCE = "GFCE",
#                  PFCE = "PFCE", GFCF = "GFCF", CIS = "CIS",
#                  `Exports of goods and services` = "Exports",
#                  `Imports of goods and services` = "Imports")))
#Plot economic components
df %>% select(Year,
`Exports of goods and services`,
`Imports of goods and services`) %>%
pivot_longer(., cols = c(`Exports of goods and services`,
`Imports of goods and services`),
names_to = "Factors", values_to = "Growth (%)") %>%
ggplot(aes(x = Year, y = `Growth (%)`, fill = Factors, group = 1)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
#  labs(title = "Growth in imports and exports of India") +
facet_grid(Factors ~ ., scales = "free_y",
labeller = as_labeller( # redefine the text that shows up for the facets
c(`Exports of goods and services` = "Exports",
`Imports of goods and services` = "Imports")))
#import dataset
df <- read_csv("EcoAnN.csv")
#Plot economic components
df %>% select(Year,
`Exports of goods and services`,
`Imports of goods and services`) %>%
pivot_longer(., cols = c(`Exports of goods and services`,
`Imports of goods and services`),
names_to = "Factors", values_to = "Growth (%)") %>%
ggplot(aes(x = Year, y = `Growth (%)`, fill = Factors, group = 1)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
#Plot economic components
df %>% select(Year,
`Exports of goods and services`,
`Imports of goods and services`) %>%
pivot_longer(., cols = c(`Exports of goods and services`,
`Imports of goods and services`),
names_to = "Factors", values_to = "Growth (%)") %>%
ggplot(aes(x = Year, y = `Growth (%)`, fill = Factors, group = 1)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#  labs(title = "Growth in imports and exports of India") +
facet_grid(Factors ~ ., scales = "free_y",
labeller = as_labeller( # redefine the text that shows up for the facets
c(`Exports of goods and services` = "Exports",
`Imports of goods and services` = "Imports")))
#Plot economic activities
df %>% select(Year, Agriculture, Industry, Services) %>%
pivot_longer(., cols = c(Agriculture, Industry, Services),
names_to = "Factors", values_to = "Growth (%)") %>%
ggplot(aes(x = Year, y = `Growth (%)`, fill = Factors, group = 1)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#  labs(title = "Sectorwise growth of India") +
facet_grid(Factors ~ ., scales = "free_y")
#Plot economic activities
df %>% select(Year, GDP) %>%
pivot_longer(., cols = c(GDP),
names_to = "Factors", values_to = "Growth (%)") %>%
ggplot(aes(x = Year, y = `Growth (%)`, fill = Factors, group = 1)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
geom_text(label = round(df$GDP, 3), nudge_x=-0.10, nudge_y=-0.60,
check_overlap=T, cex = 2.5)
#import libraries
library(tidyr) # for `gather`
library(dplyr) # for `rename` & `select`
library(ggplot2)
library(readr)
library(reshape2)
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# To use for fills, add
#scale_fill_manual(values=cbPalette)
# To use for line and point colors, add
#scale_colour_manual(values=cbPalette)
#import dataset
df <- read_csv("CO2inttrade.csv")
df %>% select(Year, Consumption, Production) %>%
pivot_longer(., cols = c(Consumption, Production),
names_to = "Allocation", values_to = "Emissions")%>%
ggplot(aes(x = Year, y = Emissions, colour = Allocation)) +
geom_line() + geom_point() + theme_bw() + theme(legend.position="bottom") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
labs(#title = expression("CO"["2"] ~ "emissions embedded in international trade"),
x = "Year",
y = expression("CO"["2"] ~ "emissions in metric tonnes")) +
scale_color_manual(name="Allocation",
labels=c("Consumption-based emissions",
"Production-based emissions"),
#values=c(df$Consumption, df$Production))
values=cbbPalette)
#import libraries
library(tidyr) # for `gather`
library(dplyr) # for `rename` & `select`
library(ggplot2)
library(readr)
library(reshape2)
library(viridis)
library(hrbrthemes)
#import dataset
df <- read_csv("Energyaccess.csv")
df %>% select(Year, electricityaccess, cookingfueltechaccess) %>%
pivot_longer(., cols = c(electricityaccess, cookingfueltechaccess),
names_to = "Access", values_to = "Growth (%)")%>%
ggplot(aes(x = Year, y = `Growth (%)`, fill = Access)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
labs(#title = "Access to energy in India",
y = "% of population") +
facet_grid(Access ~ ., scales ="free_y",
labeller = as_labeller( # redefine the text that shows up for the facets
c(electricityaccess = "Electricity",
cookingfueltechaccess = "Clean fuels & technologies for cooking")))
#import dataset
df1 <- read_csv("Energyuse.csv")
df1 %>% select(Year, `Primaryenergyconsumption(TWh)`, `Energypercapita(kWh)`) %>%
pivot_longer(., cols = c(`Primaryenergyconsumption(TWh)`, `Energypercapita(kWh)`),
names_to = "Usage", values_to = "Consumption")%>%
ggplot(aes(x = Year, y = Consumption, fill = Usage)) +
geom_point() + geom_line() + theme_bw() + theme(legend.position="none") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
labs(#title = "Energy consumption in India",
y = "Energy") +
facet_grid(Usage ~ ., scales ="free_y",
labeller = as_labeller( # redefine the text that shows up for the facets
c(`Primaryenergyconsumption(TWh)` = "Primary energy consumption (TWh)",
`Energypercapita(kWh)` = "Energy per person per year (kWh)")))
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
df1 %>% select(Year, `Primaryenergyconsumption(TWh)`, `Energypercapita(kWh)`) %>%
pivot_longer(., cols = c(`Primaryenergyconsumption(TWh)`, `Energypercapita(kWh)`),
names_to = "Allocation", values_to = "Emissions")%>%
ggplot(aes(x = Year, y = Emissions, colour = Allocation)) +
geom_line() + geom_point() + theme_bw() + theme(legend.position="bottom") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
labs(#title = "Energy consumption in India",
x = "Year",
y = "Energy") +
scale_color_manual(name="Consumption",
labels=c("Primary energy consumption (TWh)",
"Energy per person per year (kWh)"),
#values=c(df$Consumption, df$Production))
values=cbbPalette)
#import dataset #Biofuels, Solar, Wind, Hydro, Nuclear, Gas, Coal, Oil, Geo
df2 <- read_csv("Energymix.csv")
data <- df2 %>% select(Year, Biofuels, Solar, Wind, Hydro, Nuclear, Gas, Coal, Oil, Geo) %>%
pivot_longer(., cols = c(Biofuels, Solar, Wind, Hydro, Nuclear, Gas, Coal, Oil, Geo),
names_to = "Source", values_to = "Energyconsumption")
# Compute percentages with dplyr
datap <- data  %>%
group_by(Year, Source) %>%
summarise(n = sum(Energyconsumption)) %>%
mutate(Percentage = n / sum(n))
# Plot
ggplot(data, aes(x=Year, y=Energyconsumption, fill=Source)) +
geom_area(alpha=0.6 , size=1, colour="white") +
labs(#title = "Energy consumption in India based on sources",
y = "Energy consumption (TWh)") +
theme_bw() + theme(legend.position="bottom") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
#---------------------------------------------------------------------UNUSED----
ggplot(datap, aes(x=Year, y=Percentage, fill=Source)) +
geom_area(alpha=0.6 , size=1, colour="white") +
scale_fill_viridis(discrete = T) +
theme_ipsum()
# Plot
ggplot(data, aes(x=Year, y=Energyconsumption, fill=Source)) +
geom_area(alpha=0.6 , size=1, colour="white") +
labs(#title = "Energy consumption in India based on sources",
y = "Energy consumption (TWh)") +
theme_bw() + theme(legend.position="bottom")
# Plot
ggplot(data, aes(x=Year, y=Energyconsumption, fill=Source)) +
geom_area(alpha=0.6 , size=1, colour="white") +
labs(#title = "Energy consumption in India based on sources",
y = "Energy consumption (TWh)") +
theme_bw() + theme(legend.position="bottom") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
